/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Asus
 */
public class AdminBloodPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminBloodPanel
     */
    public AdminBloodPanel() {
        initComponents();
        DefaultTableModel model = (DefaultTableModel)BloodTable.getModel();
        model.setRowCount(0);  
        show_Blood();
    }
    public ArrayList<UserBloodPanels> BloodList(){
        ArrayList<UserBloodPanels> bloodList = new ArrayList<>();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager
            .getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=BloodBank;selectMethod=cursor", "sa", "123456");
            String sql = "Select donorID, Grp, DateOfDonation, Bag_Number from BLOOD";  
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            UserBloodPanels bloods;
            while(rs.next()){
                bloods = new UserBloodPanels(rs.getInt("donorID"),rs.getString("Grp"),rs.getString("DateOfDonation"),rs.getInt("Bag_Number")); 
                bloodList.add(bloods);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return bloodList;
    }
    
    public void show_Blood(){
        ArrayList<UserBloodPanels> list = BloodList();
        DefaultTableModel model = (DefaultTableModel)BloodTable.getModel();
        Object[] row = new Object[6];
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getDonor_ID();
            row[1] = list.get(i).getGrp();
            row[2] = list.get(i).getDateOfDonation();
            row[3] = list.get(i).getBag_Number();
            //row[2] = list.get(i).getDonor_Name();
            model.addRow(row); 
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        BloodTable = new javax.swing.JTable();
        Adding = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        BloodTable.setForeground(new java.awt.Color(255, 51, 51));
        BloodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Donor ID", "Group", "Date of Donation", "Bag Number"
            }
        ));
        jScrollPane2.setViewportView(BloodTable);

        Adding.setBackground(new java.awt.Color(51, 153, 0));
        Adding.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Adding.setForeground(new java.awt.Color(255, 0, 51));
        Adding.setText("Add Blood");
        Adding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddingActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(0, 153, 0));
        Update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 0, 0));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(0, 153, 0));
        Delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 0, 0));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146)
                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(142, 142, 142))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddingActionPerformed
        // TODO add your handling code here:
         new AddBloodDetails().setVisible(true);
    }//GEN-LAST:event_AddingActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        int i = BloodTable.getSelectedRow();
        TableModel model = BloodTable.getModel();
        String Donor_ID = model.getValueAt(i, 0).toString();
        String Grp = model.getValueAt(i, 1).toString();
        String DateOfDonation = model.getValueAt(i, 2).toString();
        String Bag_Number = model.getValueAt(i, 3).toString();    
                     
        new AdminBloodUpdate(Donor_ID, Grp, DateOfDonation, Bag_Number).setVisible(true);
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Delete", JOptionPane.YES_NO_OPTION);
        if(opt == 0){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager
                .getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=BloodBank;selectMethod=cursor", "sa", "123456");
                int i = BloodTable.getSelectedRow();
                TableModel model = BloodTable.getModel();
                String donorId = model.getValueAt(i, 0).toString();
                String BAG = model.getValueAt(i, 3).toString();
                String sql = "Delete From BLOOD where donorID="+donorId+" and Bag_Number = "+BAG; 
                PreparedStatement pst = connection.prepareStatement(sql);
                pst.executeUpdate();
                DefaultTableModel Model = (DefaultTableModel)BloodTable.getModel();
                Model.setRowCount(0);  
                show_Blood();
                JOptionPane.showMessageDialog(null, "Deleted Successfully!");

            } catch (Exception e) {
                
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adding;
    private javax.swing.JTable BloodTable;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
